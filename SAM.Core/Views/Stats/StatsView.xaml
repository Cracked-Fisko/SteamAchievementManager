<UserControl x:Class="SAM.Core.Views.StatsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:SAM.Core.ViewModels"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:stats="clr-namespace:SAM.Core.Stats"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:converters="clr-namespace:SAM.Core.Converters"
             xmlns:core="clr-namespace:SAM.Core"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type vm:SteamGameViewModel}, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SAM.Core;component/Styles/AllResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/Styles/wpf.ui.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Thickness x:Key="NumberBoxBorderThemeThickness">1,1,1,0</Thickness>
            <Thickness x:Key="NumberBoxAccentBorderThemeThickness">0,0,0,1</Thickness>
            <Thickness x:Key="NumberBoxLeftIconMargin">10,8,0,0</Thickness>
            <Thickness x:Key="NumberBoxRightIconMargin">0,8,10,0</Thickness>
            <Thickness x:Key="NumberBoxButtonMargin">0,5,4,0</Thickness>
            <Thickness x:Key="NumberBoxButtonPadding">0,0,0,0</Thickness>
            <system:Double x:Key="NumberBoxButtonHeight">24</system:Double>
            <system:Double x:Key="NumberBoxButtonIconSize">14</system:Double>

            <Style x:Key="StatsNumberBoxStyle" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource DefaultUiNumberBoxStyle}">
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="ClearButtonEnabled" Value="False" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Height" Value="32" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Minimum" Value="0" />
                <Setter Property="SpinButtonPlacementMode" Value="Hidden" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:NumberBox}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Border x:Name="ContentBorder"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        MinHeight="{TemplateBinding MinHeight}"
                                        Padding="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentControl x:Name="ControlIconLeft"
                                                        Grid.Column="0"
                                                        Margin="{StaticResource NumberBoxLeftIconMargin}"
                                                        Padding="0"
                                                        VerticalAlignment="Top"
                                                        Content="{TemplateBinding Icon}"
                                                        FontSize="16"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        Visibility="Collapsed" />
                                        <ui:Button x:Name="InlineDecrementButton"
                                                   Grid.Column="1"
                                                   Width="{StaticResource NumberBoxButtonHeight}"
                                                   Height="{StaticResource NumberBoxButtonHeight}"
                                                   Margin="{StaticResource NumberBoxButtonMargin}"
                                                   Padding="{StaticResource NumberBoxButtonPadding}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   HorizontalContentAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   Appearance="Secondary"
                                                   Background="Transparent"
                                                   BorderBrush="Transparent"
                                                   Command="{Binding Path=TemplateButtonCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                   CommandParameter="decrement"
                                                   Cursor="Arrow"
                                                   FontSize="{StaticResource NumberBoxButtonIconSize}"
                                                   Visibility="Visible"
                                                   Icon="ChevronDown24">
                                            <ui:Button.Foreground>
                                                <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                            </ui:Button.Foreground>
                                        </ui:Button>
                                        <Grid Grid.Column="2" Margin="{TemplateBinding Padding}">
                                            <Decorator x:Name="PART_ContentHost"
                                                       Margin="0"
                                                       VerticalAlignment="Center"
                                                       TextElement.Foreground="{TemplateBinding Foreground}" />
                                            <TextBlock x:Name="PlaceholderTextBox"
                                                       Margin="0"
                                                       Padding="1,0"
                                                       VerticalAlignment="Center"
                                                       Text="{TemplateBinding PlaceholderText}">
                                                <TextBlock.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource TextPlaceholderColor}" />
                                                </TextBlock.Foreground>
                                            </TextBlock>
                                        </Grid>
                                        <!--  Buttons and Icons have no padding from the main element to allow absolute positions if height is larger than the text entry zone  -->
                                        <ui:Button x:Name="ClearButton"
                                                   Grid.Column="3"
                                                   Width="{StaticResource NumberBoxButtonHeight}"
                                                   Height="{StaticResource NumberBoxButtonHeight}"
                                                   Margin="{StaticResource NumberBoxButtonMargin}"
                                                   Padding="{StaticResource NumberBoxButtonPadding}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Top"
                                                   HorizontalContentAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   Appearance="Secondary"
                                                   Background="Transparent"
                                                   BorderBrush="Transparent"
                                                   Command="{Binding Path=TemplateButtonCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                   CommandParameter="clear"
                                                   Cursor="Arrow"
                                                   Icon="Dismiss24">
                                            <ui:Button.Foreground>
                                                <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                            </ui:Button.Foreground>
                                        </ui:Button>
                                        <ui:Button x:Name="InlineIncrementButton"
                                                   Grid.Column="4"
                                                   Width="{StaticResource NumberBoxButtonHeight}"
                                                   Height="{StaticResource NumberBoxButtonHeight}"
                                                   Margin="{StaticResource NumberBoxButtonMargin}"
                                                   Padding="{StaticResource NumberBoxButtonPadding}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   HorizontalContentAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   Appearance="Secondary"
                                                   Background="Transparent"
                                                   BorderBrush="Transparent"
                                                   Command="{Binding Path=TemplateButtonCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                   CommandParameter="increment"
                                                   Cursor="Arrow"
                                                   Visibility="Visible"
                                                   Icon="ChevronUp24">
                                            <ui:Button.Foreground>
                                                <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                            </ui:Button.Foreground>
                                        </ui:Button>
                                        <ContentControl x:Name="ControlIconRight"
                                                        Grid.Column="5"
                                                        Margin="{StaticResource NumberBoxRightIconMargin}"
                                                        Padding="0"
                                                        VerticalAlignment="Top"
                                                        Content="{TemplateBinding Icon}"
                                                        FontSize="16"
                                                        Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                </Border>
                                <!--  The Accent Border is a separate element so that changes to the border thickness do not affect the position of the element  -->
                                <!--<Border x:Name="AccentBorder"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        BorderThickness="{StaticResource NumberBoxAccentBorderThemeThickness}"
                                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ControlStrongStrokeColorDefault}" />
                                    </Border.BorderBrush>
                                </Border>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="PlaceholderEnabled" Value="False">
                                    <Setter TargetName="PlaceholderTextBox" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <!--<Trigger Property="ShowClearButton" Value="False">
                                    <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="ClearButtonEnabled" Value="False">
                                    <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                                </Trigger>-->
                                <Trigger Property="SpinButtonPlacementMode" Value="Hidden">
                                    <Setter TargetName="InlineIncrementButton" Property="Margin" Value="0" />
                                    <Setter TargetName="InlineDecrementButton" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="SpinButtonPlacementMode" Value="Inline">
                                    <Setter TargetName="InlineIncrementButton" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="InlineDecrementButton" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IconPlacement" Value="Left">
                                    <Setter TargetName="ControlIconRight" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ControlIconRight" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="IconPlacement" Value="Right">
                                    <Setter TargetName="ControlIconLeft" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ControlIconLeft" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <!--<Setter TargetName="AccentBorder" Property="BorderThickness" Value="0,0,0,2" />
                                    <Setter TargetName="AccentBorder" Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                        </Setter.Value>
                                    </Setter>-->
                                    <Setter TargetName="ContentBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource ControlFillColorInputActive}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsFocused" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <!--<Trigger Property="IsReadOnly" Value="True">
                                    <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ClearButton" Property="Margin" Value="0" />
                                </Trigger>-->
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Cursor" Value="IBeam" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                                    <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                                    <!--<Setter TargetName="AccentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />-->
                                    <Setter TargetName="ControlIconLeft" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                    <Setter TargetName="ControlIconRight" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                    <Setter TargetName="PlaceholderTextBox" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                                    <Setter Property="ClearButtonEnabled" Value="False" />
                                    <Setter Property="SpinButtonPlacementMode" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StatsGridRowStyle" TargetType="{x:Type DataGridRow}">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Grid>
                            <StackPanel Margin="2">
                                <TextBlock Text="{Binding DisplayName}" FontWeight="Bold" Margin="2" />
                                <TextBlock Text="{Binding StatType, StringFormat='Type: {0}'}" FontStyle="Italic" />
                                <Separator Margin="0,6,0,4"
                                           Visibility="{Binding IsModified, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph="&#xE7BA;"
                                                 Visibility="{Binding IsModified, Converter={dxmvvm:BooleanToVisibilityConverter}}"
                                                 Foreground="{StaticResource PaletteOrangeBrush}"/>
                                    <ui:SymbolIcon Symbol="Warning24"
                                                   Visibility="{Binding IsModified, Converter={dxmvvm:BooleanToVisibilityConverter}}"
                                                   Foreground="{StaticResource PaletteOrangeBrush}"/>
                                    <TextBlock Text="Unsaved change." Foreground="{StaticResource PaletteOrangeBrush}"
                                               Margin="5,0"
                                               Visibility="{Binding IsModified, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!-- selected -->
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource TextFillColorLightPrimaryBrush}" />
                        <Setter Property="Background" Value="{StaticResource AccentPrimaryBrush}" />
                    </Trigger>
                    <!-- hover -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.6" Color="{StaticResource AccentPrimaryColor}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <!-- modified -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                            <Condition Binding="{Binding IsModified}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{StaticResource TextFillColorDarkPrimaryBrush}" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="1" Color="{StaticResource YellowColor}" />
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                    <!-- modified + hover -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            <Condition Binding="{Binding IsModified}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{StaticResource TextFillColorDarkPrimaryBrush}" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.8" Color="{StaticResource YellowColor}" />
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate DataType="{x:Type stats:IntegerSteamStatistic}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid Background="{StaticResource ControlBorderBrush}" />
                    <Separator Grid.Column="1" Margin="0" />
                    <ui:NumberBox x:Name="PART_IntegerValue" Grid.Column="2"
                                  Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" MaxDecimalPlaces="0"
                                  Style="{StaticResource StatsNumberBoxStyle}"
                                  Margin="0,0,0,0" />
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type stats:FloatSteamStatistic}">
                <Grid>
                    <!-- float -->
                    <ui:NumberBox x:Name="PART_FloatValue" Value="{Binding Value}" MaxDecimalPlaces="8"
                                  Style="{StaticResource StatsNumberBoxStyle}" />
                    <!-- avg rate -->
                    <Grid x:Name="PART_AvgRateValues">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!-- numerator -->
                        <ui:NumberBox Text="{Binding AvgRateNumerator}" MaxDecimalPlaces="8"
                                      ToolTip="The value accumulation since the last call to this function."
                                      Style="{StaticResource StatsNumberBoxStyle}"/>
                        <Separator Grid.Column="1" Margin="0" />
                        <!-- denominator -->
                        <ui:NumberBox Grid.Column="2"
                                      Text="{Binding AvgRateDenominator}" MaxDecimalPlaces="2"
                                      ToolTip="The amount of time since the last call to this function."
                                      Style="{StaticResource StatsNumberBoxStyle}" />
                    </Grid>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsFloat}" Value="True">
                        <Setter TargetName="PART_AvgRateValues" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsAverageRate}" Value="True">
                        <Setter TargetName="PART_FloatValue" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ui:DataGrid ItemsSource="{Binding Statistics}" AutoGenerateColumns="False" IsTextSearchEnabled="True"
                     CanUserAddRows="False"
                     RowStyle="{StaticResource StatsGridRowStyle}">
            <ui:DataGrid.Columns>
                <DataGridTemplateColumn Header="Name" CanUserSort="True" IsReadOnly="True" MinWidth="300" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <StackPanel VerticalAlignment="Center">
                                    <TextBlock Text="{Binding DisplayName}" Margin="5,0" FontWeight="Bold" />
                                    <TextBlock Text="{Binding Id}" Margin="5,0" FontStyle="Italic" FontWeight="Light" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Type" MinWidth="150">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type stats:SteamStatisticBase}">
                            <Grid>
                                <TextBlock Text="{Binding StatType, Converter={converters:EnumDescriptionConverter}}"
                                           TextAlignment="Center" VerticalAlignment="Center"
                                           Foreground="{StaticResource TextFillColorLightDisabledBrush}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Value" MinWidth="250" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" DataContext='{Binding}' />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Increment Only" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <CheckBox IsChecked="{Binding IsIncrementOnly, Mode=OneWay}" IsEnabled="False"
                                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridCheckBoxColumn Header="Increment Only" Binding="{Binding IsIncrementOnly, Mode=OneWay}" IsReadOnly="True" />-->
            </ui:DataGrid.Columns>
        </ui:DataGrid>
    </Grid>
</UserControl>
