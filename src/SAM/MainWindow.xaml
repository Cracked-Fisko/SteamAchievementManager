<ui:FluentWindow x:Class="SAM.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 xmlns:views="clr-namespace:SAM.Views"
                 xmlns:vm="clr-namespace:SAM.ViewModels"
                 xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                 xmlns:sam="urn:sam"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel, IsDesignTimeCreatable=False}"
                 ExtendsContentIntoTitleBar="True" WindowCornerPreference="DoNotRound"
                 WindowBackdropType="Mica">

    <ui:FluentWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/controls/menu/menu.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/controls/menu/menuitem.xaml" />
                <ResourceDictionary Source="pack://application:,,,/SAM.Core;component/Styles/Controls/WindowStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--
                WPF UI MENU ITEM
            -->

            <!--  TopLevelHeader  -->
            <ControlTemplate x:Key="WpfUiMenuItemTopLevelHeaderTemplateKey" TargetType="{x:Type ui:MenuItem}">
                <Border
                    x:Name="Border"
                    Margin="0"
                    Background="Transparent"
                    CornerRadius="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentControl
                                x:Name="IconElement"
                                Grid.Column="0"
                                Margin="0,0,6,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                FontSize="{TemplateBinding FontSize}" />

                            <ContentPresenter
                                x:Name="HeaderPresenter"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>

                        <Popup
                            x:Name="Popup"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="-12"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=Border}"
                            PopupAnimation="None"
                            VerticalOffset="1">
                            <Grid>
                                <Border
                                    x:Name="SubmenuBorder"
                                    Margin="12,0,12,18"
                                    Padding="0,3,0,3"
                                    Background="{DynamicResource FlyoutBackground}"
                                    BorderBrush="{DynamicResource FlyoutBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="True">
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <ui:PassiveScrollViewer CanContentScroll="True" Style="{StaticResource UiMenuItemScrollViewer}">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ui:PassiveScrollViewer>
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="20"
                                            Direction="270"
                                            Opacity="0.25"
                                            ShadowDepth="6" />
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="IconElement" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="IconElement" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="Header" Value="{x:Null}">
                        <Setter TargetName="IconElement" Property="Margin" Value="0" />
                        <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDisabled}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="SubmenuBorder"
                                        Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                        From="-90"
                                        To="0"
                                        Duration="00:00:00.167">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  TopLevelItem  -->
            <ControlTemplate x:Key="WpfUiMenuItemTopLevelItemTemplateKey" TargetType="{x:Type ui:MenuItem}">
                <Border
                    x:Name="Border"
                    Margin="0"
                    Background="Transparent"
                    CornerRadius="0">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <ContentControl
                            x:Name="IconElement"
                            Grid.Column="0"
                            Margin="0,0,6,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Icon}"
                            FontSize="{TemplateBinding FontSize}" />

                        <ContentPresenter
                            x:Name="HeaderPresenter"
                            Grid.Column="2"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="IconElement" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="IconElement" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="Header" Value="{x:Null}">
                        <Setter TargetName="IconElement" Property="Margin" Value="0" />
                        <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDisabled}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  SubmenuItem  -->
            <ControlTemplate x:Key="WpfUiMenuItemSubmenuItemTemplateKey" TargetType="{x:Type ui:MenuItem}">
                <Border
                    x:Name="Border"
                    Margin="4,1,4,1"
                    Background="Transparent"
                    CornerRadius="0">
                    <Grid Margin="8,6,8,6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="CheckBoxIconBorder"
                            Grid.Column="0"
                            Width="20"
                            Height="20"
                            Margin="0"
                            VerticalAlignment="Center"
                            Background="{DynamicResource CheckBoxBackground}"
                            BorderBrush="{DynamicResource CheckBoxBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0"
                            Visibility="Collapsed">
                            <TextBlock
                                x:Name="CheckBoxIcon"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{DynamicResource FluentSystemIcons}"
                                FontSize="16"
                                Text=""
                                TextAlignment="Center" />
                        </Border>

                        <ContentControl
                            x:Name="IconElement"
                            Grid.Column="1"
                            Margin="0,0,6,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Icon}"
                            FontSize="16" />

                        <ContentPresenter
                            Grid.Column="3"
                            ContentSource="Header"
                            RecognizesAccessKey="True"
                            TextElement.Foreground="{TemplateBinding Foreground}" />

                        <TextBlock
                            x:Name="InputGestureText"
                            Grid.Column="4"
                            Margin="25,0,0,0"
                            VerticalAlignment="Bottom"
                            DockPanel.Dock="Right"
                            FontSize="11"
                            Foreground="{DynamicResource TextFillColorDisabledBrush}"
                            Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="IconElement" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="IconElement" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="True">
                        <Setter TargetName="CheckBoxIconBorder" Property="Visibility" Value="Visible" />
                        <Setter TargetName="CheckBoxIconBorder" Property="Margin" Value="0,0,6,0" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="CheckBoxIcon" Property="Text" Value="&#xF294;" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDisabled}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="InputGestureText" Value="">
                        <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  SubItem with Subitems  -->
            <ControlTemplate x:Key="WpfUiMenuItemSubmenuHeaderTemplateKey" TargetType="{x:Type ui:MenuItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border
                        x:Name="Border"
                        Grid.Row="1"
                        Margin="4,1,4,1"
                        BorderThickness="1"
                        CornerRadius="0">
                        <Grid x:Name="MenuItemContent" Margin="8,6,8,6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentControl
                                x:Name="IconElement"
                                Grid.Column="0"
                                Margin="0,0,6,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                FontSize="16" />

                            <ContentPresenter
                                x:Name="HeaderHost"
                                Grid.Column="2"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />

                            <Grid Grid.Column="3">
                                <ui:SymbolIcon
                                    x:Name="Chevron"
                                    Margin="0,3,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Symbol="ChevronRight20" />
                            </Grid>
                        </Grid>
                    </Border>

                    <Popup
                        x:Name="Popup"
                        Grid.Row="1"
                        AllowsTransparency="True"
                        Focusable="False"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        Placement="Right"
                        PlacementTarget="{Binding ElementName=MenuItemContent}"
                        PopupAnimation="None"
                        VerticalOffset="-20">
                        <Grid>
                            <Border
                                x:Name="SubmenuBorder"
                                Margin="12,10,12,18"
                                Padding="0,3,0,3"
                                Background="{DynamicResource FlyoutBackground}"
                                BorderBrush="{DynamicResource FlyoutBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="0"
                                SnapsToDevicePixels="True">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <ui:PassiveScrollViewer CanContentScroll="True" Style="{StaticResource UiMenuItemScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ui:PassiveScrollViewer>
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="20"
                                        Direction="270"
                                        Opacity="0.5"
                                        ShadowDepth="6" />
                                </Border.Effect>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="IconElement" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="IconElement" Property="Margin" Value="0" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
                    </Trigger>
                    <!--<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>-->
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDisabled}" />
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Chevron" Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource TextFillColorDisabled}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="SubmenuBorder"
                                        Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                        From="-90"
                                        To="0"
                                        Duration="00:00:00.167">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  MenuItem Style  -->
            <Style x:Key="WpfUiMenuItem" TargetType="{x:Type ui:MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
                <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
                <Setter Property="Focusable" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Template" Value="{StaticResource WpfUiMenuItemTopLevelHeaderTemplateKey}" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Template" Value="{StaticResource WpfUiMenuItemTopLevelItemTemplateKey}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource WpfUiMenuItemSubmenuHeaderTemplateKey}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource WpfUiMenuItemSubmenuItemTemplateKey}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource WpfUiMenuItem}" TargetType="{x:Type ui:MenuItem}" />
        </ResourceDictionary>
    </ui:FluentWindow.Resources>

    <ui:FluentWindow.DataContext>
        <vm:MainWindowViewModel />
    </ui:FluentWindow.DataContext>

    <dxmvvm:Interaction.Behaviors>
        <sam:WindowAutoSaveBehavior />
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding OnLoadedCommand}" />
    </dxmvvm:Interaction.Behaviors>

    <Grid>
        <DockPanel LastChildFill="True">
            <ui:TitleBar DockPanel.Dock="Top" Title="{Binding Title, Mode=OneWay}"
                         CloseWindowByDoubleClickOnIcon="True"
                         FontSize="13">
                <ui:TitleBar.Header>
                    <StackPanel Orientation="Horizontal">
                        <Separator Margin="8,4,2,4" />
                        <Menu IsMainMenu="True" HorizontalAlignment="Left" FontSize="12">
                            <!--<Menu.Style>
                                <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource DefaultMenuStyle}">
                                    <Setter Property="Opacity" Value="0.7" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="1" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Menu.Style>-->
                            <ui:MenuItem Header="File" Icon="{ui:SymbolIcon Document20}">
                                <ui:MenuItem Header="Export Library (.json)" Icon="{ui:SymbolIcon ArrowExport24}" Command="{Binding ExportAppsCommand}" />
                                <Separator />
                                <ui:MenuItem Header="Exit" Icon="{ui:SymbolIcon ArrowExit20}" Command="{Binding ExitCommand}" />
                            </ui:MenuItem>
                            <ui:MenuItem Header="View" Icon="{ui:SymbolIcon Grid24}">
                                <ui:MenuItem Header="Hidden Apps" IsEnabled="False" />
                                <ui:MenuItem Header="Show Hidden" IsCheckable="True" IsChecked="{Binding HomeVm.ShowHidden}" />
                                <Separator />
                                <ui:MenuItem Header="Favorite Apps" IsEnabled="False" />
                                <ui:MenuItem Header="Show Only Favorites" IsCheckable="True" IsChecked="{Binding HomeVm.FilterFavorites}" />
                            </ui:MenuItem>
                            <ui:MenuItem Header="Help" Icon="{ui:SymbolIcon Question24}">
                                <ui:MenuItem Header="Reset to Default" Icon="{ui:SymbolIcon ArrowReset24}" Command="{Binding ResetAllSettingsCommand}" />
                                <Separator />
                                <ui:MenuItem Header="View Logs" Icon="{ui:SymbolIcon History24}" Command="{Binding ViewLogsCommand}" />
                                <Separator />
                                <ui:MenuItem Header="Report Issue" Icon="{ui:SymbolIcon Bug24}" Command="{Binding ViewIssuesOnGitHubCommand}" />
                                <Separator />
                                <ui:MenuItem Header="About" IsEnabled="False" />
                                <ui:MenuItem Header="Version History" Icon="{ui:SymbolIcon DocumentBulletList24}"
                                             Command="{Binding ViewChangelogOnGitHubCommand}" />
                                <ui:MenuItem Header="View on GitHub" Icon="{ui:SymbolIcon Code24}"
                                             Command="{Binding ViewOnGitHubCommand}" />
                            </ui:MenuItem>
                        </Menu>
                        <Separator Margin="0,4,4,4" />
                        <ui:AutoSuggestBox Text="{Binding HomeVm.FilterText, Delay=300, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                           PlaceholderText="Search..." BorderBrush="Transparent"
                                           Icon="Search24" Margin="5" FontSize="12"
                                           OriginalItemsSource="{Binding HomeVm.Suggestions, Mode=OneWay}"
                                           Width="400">
                            <ui:AutoSuggestBox.Style>
                                <Style TargetType="{x:Type ui:AutoSuggestBox}" BasedOn="{StaticResource BaseUiAutoSuggestBoxStyle}" />
                            </ui:AutoSuggestBox.Style>
                        </ui:AutoSuggestBox>
                    </StackPanel>
                </ui:TitleBar.Header>
                <ui:TitleBar.Icon>
                    <ui:ImageIcon Source="/SAM.png" />
                </ui:TitleBar.Icon>
            </ui:TitleBar>
            <views:StatusBarView DockPanel.Dock="Bottom" DataContext="{Binding HomeVm}" />
            <views:HomeView DataContext="{Binding HomeVm}" />
        </DockPanel>
    </Grid>

</ui:FluentWindow>
